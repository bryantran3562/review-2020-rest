(env) C:\Users\bryan\python\review-rest-2020-github\review-2020-rest\tutorial>python manage.py shell
Python 3.7.4 (tags/v3.7.4:e09359112e, Jul  8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from snippets.models import Snippet
>>> from snippets.serializers import SnippetSerializer
>>> from rest_framework.renderers import JSONRenderer
>>> from rest_framework.parsers import JSONParser
>>> snippet = Snippet(code='foo = "bar"\n') <------------Create a Snippet
>>> snippet.save()
>>> snippet = Snippet(code='print("hello, world")\n')
>>> snippet.save() <-------------------------save to database
>>> serializer = SnippetSerializer(snippet) <-----------Pass object instance to serializers so that it converted to Python data type
>>> serializer.data <--------------------------------Check it out.
{'id': 2, 'title': '', 'code': 'print("hello, world")\n', 'linenos': False, 'language': 'python', 'style': 'friendly'}
>>> content = JSONRenderer().render(serializer.data) <---Render it as json string.
>>> content
b'{"id":2,"title":"","code":"print(\\"hello, world\\")\\n","linenos":false,"language":"python","style":"friendly"}' <--Check it out.

>>> import io
>>> stream = io.BytesIO(content) <-----Receive data from user
>>> data = JSONParser().parse(stream) <---------------------Parse it into Python data type
>>> serializer = SnippetSerializer(data=data) <----Put it in serializer so that it can convert the data back to object instance data.
>>> serializer.is_valid() <---Check to see if it is valid.
True
>>> serializer.validated_data <--Loook at the data in object instance format
OrderedDict([('title', ''), ('code', 'print("hello, world")'), ('linenos', False), ('language', 'python'), ('style', 'friendly')])
>>> serializer.save() <--Finally save it to database.
<Snippet: Snippet object (3)>
>>>